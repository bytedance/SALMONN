# Copyright (2024) Tsinghua University, Bytedance Ltd. and/or its affiliates
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

model:
  # paths
  llama_path: "path to llama model" # huggingface repo_id or local path
  whisper_path: "path to whisper model" # huggingface repo_id or local path
  beats_path: "path to beats model" # .pt file path downloaded from main git repo

  ckpt: "model ckpt" # if not "", load model from ckpt for training or evaluation

  freeze_whisper: True
  freeze_beats: True

  # window-level Q-Former
  use_speech_Qformer: True
  freeze_speech_QFormer: False
  window_level_Qformer: True
  num_speech_query_token: 1 # Q-Former hyper-parameter
  # Given audio length L seconds, Number of windows = floor((L - second_per_window) / second_stride) + 1
  # With current values (1/3 second), each second produces 3 non-overlapping windows
  # Numeric example:
  # - For a 10-second audio: Number of windows = floor((10 - 0.333333) / 0.333333) + 1 = 29 + 1 = 30 windows
  second_per_window: 0.333333
  second_stride: 0.333333

  speech_llama_proj_model: ""
  freeze_speech_llama_proj: False

  # LoRA
  lora: True
  lora_rank: 8
  lora_alpha: 32
  lora_dropout: 0.1

  multi_prompt: True
  prompt_template: "USER: {}\nASSISTANT:"
  prompt_path: "prompts/train_prompt.json" # local path to train prompt
  test_prompt_path: "prompts/test_prompt.json" # local path to test prompt
  max_txt_len: 300 # text token limit, beyond which the text will be truncated
  end_sym: "</s>"

datasets:
  train_ann_path: "path to train data"
  valid_ann_path: "path to valid data"
  test_ann_path: "path to test data"

  whisper_path: "path to whisper model"

run:
  # log & settings
  seed: 42 # random seed
  output_dir: "output directory" # directory to save checkpoints & tensorboard logs, etc.
  evaluate: False # if True, only evaluate model on test data

  log_freq: 5
  save_freq: 1000  # save checkpoint every 1000 iterations 
  epoch_based: False # if True, exhausted all data for each epoch
  iters_per_epoch: 3000 # manually set for each epoch, when epoch_based is False
  accum_grad_iters: 1 # GBS / (MBS * DP)
  batch_size_train: 8 # MBS
  batch_size_eval: 8 # MBS
  num_workers: 8 # number of dataloader workers

  device: "cuda"
  use_distributed: True
  amp: True # automatic mixed precision by torch.cuda.amp
  world_size: 1 # overwritten by actual world_size (n_nodes * n_gpus)
  dist_url: "env://" # use EnvVars (Master_ADDR, Master_PORT) for distributed training

  # optimizer & scheduler
  optims:
    max_epoch: 30
    warmup_steps: 3000
    warmup_start_lr: 1e-6
    init_lr: 3e-5
    min_lr: 1e-5
    weight_decay: 0.05
    beta2: 0.999